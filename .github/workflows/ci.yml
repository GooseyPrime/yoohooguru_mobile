name: Continuous Integration

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        # This single cache step is sufficient for the entire monorepo
        cache: 'npm'

    - name: Install all dependencies
      # 'npm ci' is recommended for CI as it uses the lockfile for faster, more reliable installs across all workspaces
      run: npm ci

    - name: Lint backend code
      run: npm run lint --workspace=backend

    - name: Run frontend tests
      run: npm test --workspace=frontend

    - name: Run backend tests
      # Corrected command: --workspace flag moved before the '--' to be interpreted by npm
      run: npm test --workspace=backend -- --detectOpenHandles --verbose
      env:
        NODE_ENV: test
        FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
        FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
        FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
        FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
        FIREBASE_DATABASE_URL: ${{ secrets.FIREBASE_DATABASE_URL }}
        FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
        FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
        FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
        STRIPE_PUBLISHABLE_KEY: ${{ secrets.STRIPE_PUBLISHABLE_KEY }}
        STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
        STRIPE_WEBHOOK_ID: ${{ secrets.STRIPE_WEBHOOK_ID }}
        STRIPE_GURU_PASS_PRICE_ID: ${{ secrets.STRIPE_GURU_PASS_PRICE_ID }}
        STRIPE_SKILL_VERIFICATION_PRICE_ID: ${{ secrets.STRIPE_SKILL_VERIFICATION_PRICE_ID }}
        STRIPE_TRUST_SAFETY_PRICE_ID: ${{ secrets.STRIPE_TRUST_SAFETY_PRICE_ID }}

    - name: Build frontend
      run: npm run build --workspace=frontend
      env:
        # The CI=false environment variable is often used to prevent warnings from being treated as errors during the build process.
        CI: false

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    # This job will only run after the 'build-and-test' job has successfully completed for all matrix variations.
    needs: [build-and-test]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Deploy to production
      run: echo "Deploy to production environment"
      # Add your production deployment commands here

